#  _  __          _     _           _     
# | |/ /___ _   _| |__ (_)_ __   __| |___ 
# | ' // _ \ | | | '_ \| | '_ \ / _` / __|
# | . \  __/ |_| | |_) | | | | | (_| \__ \
# |_|\_\___|\__, |_.__/|_|_| |_|\__,_|___/
#           |___/      

$mainMod = SUPER
$files = nautilus
$term = kitty
$UserScripts = $HOME/.config/hypr/UserScripts
$UserConfigs = $HOME/.config/hypr/UserConfigs

bind = $mainMod, Q, killactive
bind = $mainMod, Q, exec, ~/.config/hypr/UserScripts/WaydroidWaybar.sh refresh
bind = $mainMod, S, fullscreen, 0
bind = $mainMod, M, fullscreen, 1
bind = CTRL, M, fullscreenstate, 0 3

bind = $mainMod SHIFT, F, togglefloating
bind = $mainMod CTRL, F, pseudo
bind = $mainMod, L, exec, swaylock -C ~/.config/swaylock/config.conf 

# EXTRAS
bind = $mainMod ALT, R, exec, $UserScripts/Refresh.sh # Refresh waybar and rofi
bind = $mainMod ALT, V, exec, $UserScripts/ClipManager.sh # Clipboard Manager
bind = $mainMod, C, exec, hyprpicker --autocopy # Color Picker
bind = $mainMod, z, exec, gromit-mpx -a
bind = $mainMod, n, exec, sticky -n

# Quick Edit
bind = $mainMod, E, exec, kitty -e nvim 

# Group
bind = $mainMod, G, togglegroup
bind = ALT, tab, changegroupactive

# Special Keys / Hot Keys
bind = , xf86audioraisevolume, exec, $UserScripts/Volume.sh --inc #volume up
bind = , xf86audiolowervolume, exec, $UserScripts/Volume.sh --dec #volume down
bind = , xf86AudioMicMute, exec, $UserScripts/Volume.sh --toggle-mic #mute mic
bind = , xf86audiomute, exec, $UserScripts/Volume.sh --toggle
bind = , xf86Sleep, exec, systemctl suspend  #sleep button 
bind = , xf86Rfkill, exec, $UserScripts/AirplaneMode.sh #Airplane mode
bind = , xf86MonBrightnessDown, exec, $UserScripts/Brightness.sh --dec 
bind = , xf86MonBrightnessUp, exec, $UserScripts/Brightness.sh --inc 

# Screenshot
bind = $mainMod SHIFT, S, exec, $UserScripts/ScreenShot.sh

# Resize windows
binde = $mainMod SHIFT, left, resizeactive,-50 0
binde = $mainMod SHIFT, right, resizeactive,50 0
binde = $mainMod SHIFT, up, resizeactive,0 -50
binde = $mainMod SHIFT, down, resizeactive,0 50

# Move windows
bind = $mainMod CTRL, left, movewindow, l
bind = $mainMod CTRL, right, movewindow, r
bind = $mainMod CTRL, up, movewindow, u
bind = $mainMod CTRL, down, movewindow, d

# Toggle Split
bind = $mainMod SHIFT, i, togglesplit

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, split-workspace, 1
bind = $mainMod, 2, split-workspace, 2
bind = $mainMod, 3, split-workspace, 3
bind = $mainMod, 4, split-workspace, 4
bind = $mainMod, 5, split-workspace, 5
bind = $mainMod, 6, split-workspace, 6

# Move active window and follow to workspace
bind = $mainMod SHIFT, 1, split-movetoworkspace, 1
bind = $mainMod SHIFT, 2, split-movetoworkspace, 2
bind = $mainMod SHIFT, 3, split-movetoworkspace, 3
bind = $mainMod SHIFT, 4, split-movetoworkspace, 4
bind = $mainMod SHIFT, 5, split-movetoworkspace, 5
bind = $mainMod SHIFT, 6, split-movetoworkspace, 6

# Swap workspaces windows
bind = SUPER CTRL, S, exec, ~/.config/hypr/UserScripts/HyprSwitch.sh
# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# tofi App launcher
bindr = $mainMod, $mainMod_L, exec, pkill tofi || eval "$(tofi-drun --fuzzy-match true --config ~/.config/tofi/config.conf --prompt-text '' --ascii-input true --padding-left 40% --padding-top 33%)"
bind = $mainMod, W, exec, ~/.config/hypr/UserScripts/WaydroidMenu.sh
bind = $mainMod SHIFT, R, exec, ~/.config/hypr/UserScripts/WaydroidWaybar.sh refresh

# Change external display mode
bind = $mainMod SHIFT, D, exec, $UserScripts/ExternalDisplay.sh

# Launch kitty terminal
bind = $mainMod, T, exec, $term
bind = $mainMod SHIFT, T, exec, $term --class $term-float
# Lanch nautilus
bind = $mainMod, F, exec, $files
# launch default browser
bind = $mainMod, B, exec, $HOME/.local/share/AppImage/ZenBrowser.AppImage 

bind = $mainMod, P, exec, kitty --class pulsemixer -e pulsemixer
bind = $mainMod, D, exec, bash -c 'source $HOME/Documents/python-projects/woonshine-dictate/.venv/bin/activate && python $HOME/Documents/python-projects/woonshine-dictate/main.py'

